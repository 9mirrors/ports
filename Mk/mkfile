</sys/ports/Config/ports.mk.conf

all:VQE: fetch build install

info:VQE:
	echo 'Name: '^$PORTNAME
	if(! ~ $VERSION 0){
		echo 'Port Version: '^$VERSION
	}
	echo 'Description: '^$DESCRIPTION
	echo 'Complain to: '^$OWNER

fetch:VQE:
	. /sys/ports/Config/ports.conf
	mkdir -p work/
	if(! ~ $#WEBSOURCE 0){
		@{
			rfork ne
			webfs
			hget $WEBSOURCE > work/$WORKFILE
			if(! ~ $#EXTRACTCOMMAND 0){
				EXTRACTCOMMAND=($EXTRACTCOMMAND `{pwd}^'/work/'^$WORKFILE)
				cd work
				$EXTRACTCOMMAND
			}
		}
	}
	if(! ~ $#CONTRIBSOURCE 0){
		9fs sources
		dircp $CONTRIBSOURCE work/
	}
	if(! ~ $#FCONTRIBSOURCE 0){
		9fs contrib.9front.org
		dircp $FCONTRIBSOURCE work/
	}
	if(! ~ $#HGSOURCE 0){
		webfs
		hg clone $HGSOURCE work/
	}
	status=''

build:VQE:
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	if(! ~ $#DEPS 0){
		for(i in $DEPS){
			{
				rfork ne
				if(! checkport $i){
					cd /sys/ports/$i
					mk fetch
					mk build
					mk install
				}
			}
		}
	}
	if(! ~ $#PATCHES 0){
		dircp $PATCHES $BUILDPATH
	}
	cd $BUILDPATH
	for(i in $BUILDFOR){
		@{
			rfork ne
			objtype=$i
			if(! ~ $BUILDCOMMAND ''){
				$BUILDCOMMAND
			}
			if not {
				status=''
			}
		}
	}

install:VQE:
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	if(! checkport $PORTNAME){
		cd $BUILDPATH
		for(i in $BUILDFOR){
			{
				rfork ne
				objtype=$i
				$INSTALLCOMMAND
			}
		}
		if(! ~ $VERSION 0){
			register $PORTNAME $VERSION
		}
		if not {
			register $PORTNAME '0'
		}
		if(! ~ $*MESSAGE 0){
			for(i in $MESSAGE){
				echo $i
			}
		}
	}

reinstall:VQE:
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	cd $BUILDPATH
	for (i in $BUILDFOR){
		@{
			rfork ne
			objtype=$i
			$INSTALLCOMMAND
		}
	}
	if(! ~ $*MESSAGE 0){
		for(i in $MESSAGE){
			echo $i
		}
	}

clean:VQE:
	. /sys/ports/Config/ports.conf
	cd $BUILDPATH
	eval $CLEANCOMMAND

nuke:VQE:
	. /sys/ports/Config/ports.conf
	rm -rf work/

uninstall:VQ:
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	if(test -e $PORTS^$PORTNAME^'/uninstall'){
		rc $PORTS^$PORTNAME^/'uninstall'
		deregister $PORTNAME
	}
	if not {
		echo 'unable to uninstall port'
		echo 'please send a bug report to '^$OWNER^' about this'
		echo 'If '^$OWNER^' does not respond or fix the port please'
		echo 'email mveety@gmail.com, and he will remove the port.'
	}
