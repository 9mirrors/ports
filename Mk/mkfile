</sys/ports/Config/ports.mk.conf

info:VQ:
	echo 'Name: '^$PORTNAME
	echo 'Description: '^$DESCRIPTION
	echo 'Complain to: '^$OWNER

fetch:VQ:
	. /sys/ports/Config/ports.conf
	mkdir -p work/
	if(! ~ $#WEBSOURCE 0){
		webfs
		hget $WEBSOURCE > work/$WORKFILE
		$EXTRACTCOMMAND=($EXTRACTCOMMAND 'work/'^$WORKFILE)
		eval $EXTRACTCOMMAND
	}
	if(! ~ $#CONTRIBSOURCE 0){
		9fs sources
		dircp $CONTRIBSOURCE work/
	}
	if(! ~ $#HGSOURCE 0){
		webfs
		hg clone $HGSOURCE work/
	}

build:VQ:
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	if(! ~ $#DEPS 0){
		for(i in $DEPS){
			{
				rfork ne
				if(! checkport $i){
					cd /sys/ports/$i
					mk fetch
					mk build
					mk install
				}
			}
		}
	}
	if(! ~ $#PATCHES 0){
		dircp $PATCHES $BUILDPATH
	}
	cd $BUILDPATH
	for(i in (arm 386 amd64)){
		{
			rfork ne
			objtype=$i
			eval $BUILDCOMMAND
		}
	}

install:VQ:
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	cd $BUILDPATH
	for(i in (arm 386 amd64)){
		{
			rfork ne
			objtype=$i
			eval $BUILDCOMMAND
		}
	}
	register $PORTNAME
	if(! ~ $*MESSAGE 0){
		for(i in $MESSAGE){
			echo $i
		}
	}

clean:VQ:
	. /sys/ports/Config/ports.conf
	cd $BUILDPATH
	eval $CLEANCOMMAND

nuke:VQ:
	. /sys/ports/Config/ports.conf
	rm -rf work/

uninstall:VQ:
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	if(test -e $PORTS^$PORTNAME^'/uninstall'){
		rc $PORTS^$PORTNAME^/'uninstall'
		deregister $PORTNAME
	}
	if(! test -e $PORTS^$PORTNAME^'/uninstall'){
		echo 'unable to uninstall port'
		echo 'please send a bug report to '^$OWNER^' about this'
		echo 'If '^$OWNER^' does not respond or fix the port please'
		echo 'email mveety@gmail.com, and he will remove the port.'
	}
