</sys/ports/Config/ports.mk.conf

# for compatibility
BUILDFOR=$objtype
PORTID=`{echo $PORTNAME | md5sum}
PORTCAT=`{basename -d `{pwd} | sed 's,.*/,,'}
PORTNAME=$PORTCAT/`{basename `{pwd}}

all:VQE: fetch build install

info:VQE:
	echo 'Name: ' $PORTNAME
	if(! ~ $VERSION 0){
		echo 'Port Version: ' $VERSION
	}
	echo 'Description: ' $DESCRIPTION
	echo 'Complain to: ' $OWNER

fetch:VQE:
	. /sys/ports/Config/ports.conf
	mkdir -p work/
	if(! ~ $#WEBSOURCE 0){
		rfork ne
		test -e work/$WORKFILE && exit alreadyfetched
		{ webfs && hget $WEBSOURCE > work/$WORKFILE } || exit $status
		if(! ~ $#EXTRACTCOMMAND 0){
			EXTRACTCOMMAND=($EXTRACTCOMMAND `{pwd}^'/work/'^$WORKFILE)
			cd work
			$EXTRACTCOMMAND || exit $status
		}
		exit ''
	}
	if(! ~ $#CONTRIBSOURCE 0){
		rfork ne
		{ 9fs sources && dircp $CONTRIBSOURCE work/ } || exit $status
		exit
	}
	if(! ~ $#FCONTRIBSOURCE 0){
		rfork ne
		{ 9fs contrib.9front.org && dircp $FCONTRIBSOURCE work/ } || exit $status
		exit
	}
	if(! ~ $#HGSOURCE 0){
		rfork ne
		{ webfs && hg clone $HGSOURCE/work } || exit $status
		exit
	}
	exit ''

build:VQE: # fetch
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	if(! ~ $#DEPS 0){
		for(i in $DEPS){
			@{
				rfork ne
				if(! checkport $i){
					cd /sys/ports/$i
					mk fetch
					mk build
					mk install
				}
			}
		}
	}
	if(! ~ $#PATCHES 0){
		dircp $PATCHES $BUILDPATH
	}
	cd $BUILDPATH
	@{
		rfork ne
		if(! ~ $BUILDCOMMAND ''){
			$BUILDCOMMAND
		}
		if not {
			status=''
		}
	}

install:VQE: # build fetch
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
#	touch install
	if(! checkport $PORTNAME){
		cd $BUILDPATH
		@{
			rfork ne
			$INSTALLCOMMAND
		}
		echo $status
		if(! ~ $#VERSION 0){
			register $PORTNAME $VERSION
		}
		if not {
			register $PORTNAME '0'
		}
		if(! ~ $*MESSAGE 0){
			for(i in $MESSAGE){
				echo $i
			}
		}
	}
	if not {
		echo $PORTNAME is already installed
		status='already installed'
	}

reinstall:VQE: # build fetch
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
	cd $BUILDPATH
	@{
		rfork ne
		$INSTALLCOMMAND
	}
	if(! ~ $*MESSAGE 0){
		for(i in $MESSAGE){
			echo $i
		}
	}

clean:VQE: # build fetch
	. /sys/ports/Config/ports.conf
	cd $BUILDPATH || exit notfetched
	if(! ~ $#CLEANCOMMAND 0){
		$CLEANCOMMAND || exit $status
	}
	exit ''

nuke:VQE:
	rm -rf work/

uninstall:VQ: # fetch
	. /sys/ports/Config/ports.conf
	. /sys/ports/Mk/pkg.rc
#	rm -f build fetch install
	if(! checkport $PORTNAME){
		echo $PORTNAME is not installed
		exit notinstalled
	}
	if(~ $#UNINSTALL 0 && ~ $#UNINSTALLCMD 0){
		if(test -e $PORTS^$PORTNAME^'/uninstall'){
			rc $PORTS^$PORTNAME^/'uninstall'
			deregister $PORTNAME
		}
		if not {
			echo 'unable to uninstall port'
			echo 'please send a bug report to '^$OWNER^' about this'
			echo 'If '^$OWNER^' does not respond or fix the port please'
			echo 'email mveety@gmail.com, and he will remove the port.'
		}
	}
	if not {
		if(~ $#UNINSTALLCMD 0){
			for(i in $UNINSTALL){
				rm -f $i
			}
		}
		if not {
			$UNINSTALLCMD
		}
		deregister $PORTNAME
	}
